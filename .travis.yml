# Set distribution to Trusty.
#sudo: required
#dist: trusty

# Set language to C++.
language: cpp

# Only do testing on master, develop, release, and hotfix branches.
branches:
  only:
  - master
  - develop
  - /^release-.*$/
  - /^hotfix-.*$/

# Cache Boost.
cache:
  directories:
    - boost/libc++-3.9.0

# Try both GCC and Clang.
matrix:
  include:
    - env: GCC_VERSION=6 CPP=14
      os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libboost-test-dev
            - valgrind
      before_script:
        - export CC=gcc-6
        - export CXX=g++-6
        - export CPPFLAGS='-pedantic -Wall -Wextra -Wconversion -Wshadow -g -O0 --coverage'
      after_success:
        - coveralls --verbose --gcov gcov-6 --gcov-options '\--long-file-names --preserve-paths'
    - env: CLANG_VERSION=3.8 CPP=14 LIBCXX=false
      os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
            - libboost-test-dev
            - valgrind
      before_script:
        - export CC=clang-3.8
        - export CXX=clang++-3.8
        - export CPPFLAGS='-std=c++14 -pedantic -Wall -Wextra -Wconversion -Wshadow -g -O0 --coverage'

# Collect all setup required into one place.
before_install:
  - which ${CC}
  - which ${CXX}
  - which valgrind
  - ${CXX} --version
  - valgrind --version

# Install other prerequisites.
install:
  - pip install --user requests[security]
  - pip install --user cpp-coveralls

# `make test` makes the tests and runs them.
script:
  - make test
  - (cd test && valgrind --error-exitcode=1 --leak-check=full ./crc-test)
